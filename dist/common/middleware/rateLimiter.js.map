{"version":3,"sources":["../../../src/common/middleware/rateLimiter.ts","../../../src/common/utils/envConfig.ts"],"sourcesContent":["import type { Request } from \"express\";\nimport { rateLimit } from \"express-rate-limit\";\n\nimport { env } from \"@/common/utils/envConfig\";\n\nconst rateLimiter = rateLimit({\n  legacyHeaders: true,\n  limit: env.COMMON_RATE_LIMIT_MAX_REQUESTS,\n  message: \"Too many requests, please try again later.\",\n  standardHeaders: true,\n  windowMs: 15 * 60 * env.COMMON_RATE_LIMIT_WINDOW_MS,\n  keyGenerator: (req: Request) => req.ip as string,\n});\n\nexport default rateLimiter;\n","import dotenv from \"dotenv\";\nimport { cleanEnv, host, num, port, str, testOnly } from \"envalid\";\n\ndotenv.config();\n\nexport const env = cleanEnv(process.env, {\n  NODE_ENV: str({ devDefault: testOnly(\"test\"), choices: [\"development\", \"production\", \"test\"] }),\n  HOST: host({ devDefault: testOnly(\"localhost\") }),\n  PORT: port({ devDefault: testOnly(3000) }),\n  CORS_ORIGIN: str({ devDefault: testOnly(\"http://localhost:3000\") }),\n  COMMON_RATE_LIMIT_MAX_REQUESTS: num({ devDefault: testOnly(10000) }),\n  COMMON_RATE_LIMIT_WINDOW_MS: num({ devDefault: testOnly(10000) }),\n});\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gCAA0B;;;ACD1B,oBAAmB;AACnB,qBAAyD;AAEzD,cAAAA,QAAO,OAAO;AAEP,IAAM,UAAM,yBAAS,QAAQ,KAAK;AAAA,EACvC,cAAU,oBAAI,EAAE,gBAAY,yBAAS,MAAM,GAAG,SAAS,CAAC,eAAe,cAAc,MAAM,EAAE,CAAC;AAAA,EAC9F,UAAM,qBAAK,EAAE,gBAAY,yBAAS,WAAW,EAAE,CAAC;AAAA,EAChD,UAAM,qBAAK,EAAE,gBAAY,yBAAS,GAAI,EAAE,CAAC;AAAA,EACzC,iBAAa,oBAAI,EAAE,gBAAY,yBAAS,uBAAuB,EAAE,CAAC;AAAA,EAClE,oCAAgC,oBAAI,EAAE,gBAAY,yBAAS,GAAK,EAAE,CAAC;AAAA,EACnE,iCAA6B,oBAAI,EAAE,gBAAY,yBAAS,GAAK,EAAE,CAAC;AAClE,CAAC;;;ADPD,IAAM,kBAAc,qCAAU;AAAA,EAC5B,eAAe;AAAA,EACf,OAAO,IAAI;AAAA,EACX,SAAS;AAAA,EACT,iBAAiB;AAAA,EACjB,UAAU,KAAK,KAAK,IAAI;AAAA,EACxB,cAAc,CAAC,QAAiB,IAAI;AACtC,CAAC;AAED,IAAO,sBAAQ;","names":["dotenv"]}